<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EditSongs.Author" xml:space="preserve">
    <value>Author</value>
  </data>
  <data name="EditSongs.AutoPos" xml:space="preserve">
    <value>Auto Position</value>
  </data>
  <data name="EditSongs.BackgroundImage" xml:space="preserve">
    <value>Background Image:</value>
  </data>
  <data name="EditSongs.ColorButton" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="EditSongs.FontButton" xml:space="preserve">
    <value>Font</value>
  </data>
  <data name="EditSongs.NextVerse" xml:space="preserve">
    <value>Next Verse</value>
  </data>
  <data name="EditSongs.OutlineColor" xml:space="preserve">
    <value>Outline Color</value>
  </data>
  <data name="EditSongs.PreviousVerse" xml:space="preserve">
    <value>Previous Verse</value>
  </data>
  <data name="EditSongs.TextOutline" xml:space="preserve">
    <value>Text Outline</value>
  </data>
  <data name="EditSongs.Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="EditSongs.Verses" xml:space="preserve">
    <value>Verses</value>
  </data>
  <data name="Global.Buttons.Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Global.Buttons.Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Global.Buttons.Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="Global.Buttons.OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Help.Intro.5" xml:space="preserve">
    <value>The ‘PlayList’ is used to put  in all Songs needed for the Worship Session. No need for hectically Song searches. Use the ‘UP’and ‘DOWN’ Buttons to order your PlayList. The ‘REMOVE’ Button removes the Song from the PlayList, without deleting it from the SongList.</value>
  </data>
  <data name="Left.EditSongs" xml:space="preserve">
    <value>Edit Songs</value>
  </data>
  <data name="Left.Presentation" xml:space="preserve">
    <value>Media Presentation</value>
  </data>
  <data name="Left.Presentation 1" xml:space="preserve">
    <value>Media Presentation</value>
  </data>
  <data name="Left.ShowSongs" xml:space="preserve">
    <value>Show Songs</value>
  </data>
  <data name="Left.TextTool" xml:space="preserve">
    <value>Text Tool</value>
  </data>
  <data name="MediaPresentation.Loop" xml:space="preserve">
    <value>Loop</value>
  </data>
  <data name="MediaPresentation.Preview" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="Menu.Edit" xml:space="preserve">
    <value>&amp;Edit</value>
  </data>
  <data name="Menu.Edit.Options" xml:space="preserve">
    <value>&amp;Options</value>
  </data>
  <data name="Menu.Help" xml:space="preserve">
    <value>&amp;Help</value>
  </data>
  <data name="Menu.Help.About" xml:space="preserve">
    <value>&amp;About DreamBeam</value>
  </data>
  <data name="Menu.Help.Intro" xml:space="preserve">
    <value>&amp;Intro and Main Components</value>
  </data>
  <data name="Menu.MediaList" xml:space="preserve">
    <value>&amp;MediaList</value>
  </data>
  <data name="Menu.MediaList.Exit" xml:space="preserve">
    <value>E&amp;xit DreamBeam</value>
  </data>
  <data name="Menu.MediaList.New" xml:space="preserve">
    <value>&amp;New...</value>
  </data>
  <data name="Menu.MediaList.Rename" xml:space="preserve">
    <value>&amp;Rename...</value>
  </data>
  <data name="Menu.MediaList.Save" xml:space="preserve">
    <value>&amp;Save</value>
  </data>
  <data name="Menu.MediaList.SaveAs" xml:space="preserve">
    <value>Save &amp;As...</value>
  </data>
  <data name="Menu.Song" xml:space="preserve">
    <value>&amp;Song</value>
  </data>
  <data name="Menu.Song.Exit" xml:space="preserve">
    <value>E&amp;xit DreamBeam</value>
  </data>
  <data name="Menu.Song.New" xml:space="preserve">
    <value>&amp;New...</value>
  </data>
  <data name="Menu.Song.Rename" xml:space="preserve">
    <value>&amp;Rename...</value>
  </data>
  <data name="Menu.Song.Save" xml:space="preserve">
    <value>&amp;Save</value>
  </data>
  <data name="Menu.Song.SaveAs" xml:space="preserve">
    <value>Save &amp;As...</value>
  </data>
  <data name="Menu.View" xml:space="preserve">
    <value>&amp;View</value>
  </data>
  <data name="Message.DeleteSongTitle" xml:space="preserve">
    <value>Delete Song ...</value>
  </data>
  <data name="Message.EnterSongName" xml:space="preserve">
    <value>Enter a name for the Song</value>
  </data>
  <data name="Message.ImportMedia" xml:space="preserve">
    <value>Press "Yes" to copy the file(s) into Dreambeam's Media Folder, or "No" to create link(s) to the original location ?</value>
  </data>
  <data name="Message.ImportMediaTitle" xml:space="preserve">
    <value>Import or Link?</value>
  </data>
  <data name="Message.MediaListExits" xml:space="preserve">
    <value>This MediaList already exists.</value>
  </data>
  <data name="Message.MediaListName" xml:space="preserve">
    <value>Enter a name for the MediaList:</value>
  </data>
  <data name="Message.MediaListNotRenamed" xml:space="preserve">
    <value>No Name defined - MediaList hasn't been renamed.</value>
  </data>
  <data name="Message.MediaListNotSaved" xml:space="preserve">
    <value>No Name defined - MediaList hasn't been saved.</value>
  </data>
  <data name="Message.MediaListNotSavedYet" xml:space="preserve">
    <value>MediaList is not saved, yet.</value>
  </data>
  <data name="Message.NewMediaListTitle" xml:space="preserve">
    <value>New MediaList..</value>
  </data>
  <data name="Message.NewSongTitle" xml:space="preserve">
    <value>New Song..</value>
  </data>
  <data name="Message.NoNameEntered" xml:space="preserve">
    <value>No name defined.</value>
  </data>
  <data name="Message.RenameMediaListTitle" xml:space="preserve">
    <value>Rename MediaList "%1%" to ...</value>
  </data>
  <data name="Message.RenameSongTitle" xml:space="preserve">
    <value>Rename Song "%1%" to ...</value>
  </data>
  <data name="Message.SaveMediaListAs" xml:space="preserve">
    <value>Save MediaList as...</value>
  </data>
  <data name="Message.SaveSongAs" xml:space="preserve">
    <value>Save song as..</value>
  </data>
  <data name="Message.SongExists" xml:space="preserve">
    <value>This song already exists.</value>
  </data>
  <data name="Message.SongNotRenamed" xml:space="preserve">
    <value>No name defined - Song has not been renamed.</value>
  </data>
  <data name="Message.SongNotSaved" xml:space="preserve">
    <value>No name defined - Song hasn't been saved.</value>
  </data>
  <data name="Message.SongNotSavedYet" xml:space="preserve">
    <value>Song has not been saved yet.</value>
  </data>
  <data name="Message.WantDeleteSong" xml:space="preserve">
    <value>Do you really want to delete "%1%" ?</value>
  </data>
  <data name="Options.BeamBox.BackgroundGroup" xml:space="preserve">
    <value>Background Color:</value>
  </data>
  <data name="Options.BeamBox.BGColorButton" xml:space="preserve">
    <value>Set Color</value>
  </data>
  <data name="Options.BeamBox.Height" xml:space="preserve">
    <value>Height</value>
  </data>
  <data name="Options.BeamBox.HideMouseCheckBox" xml:space="preserve">
    <value>Hide Mouse Cursor</value>
  </data>
  <data name="Options.BeamBox.MouseGroup" xml:space="preserve">
    <value>Window and Mouse:</value>
  </data>
  <data name="Options.BeamBox.OnTopCheckBox" xml:space="preserve">
    <value>Window always on top</value>
  </data>
  <data name="Options.BeamBox.PositionGroup" xml:space="preserve">
    <value>Position:</value>
  </data>
  <data name="Options.BeamBox.PositionTitle" xml:space="preserve">
    <value>Set Position:</value>
  </data>
  <data name="Options.BeamBox.SizeGroup" xml:space="preserve">
    <value>Size:</value>
  </data>
  <data name="Options.BeamBox.tabpage1" xml:space="preserve">
    <value>Auto</value>
  </data>
  <data name="Options.BeamBox.tabpage2" xml:space="preserve">
    <value>Manual</value>
  </data>
  <data name="Options.BeamBox.Width" xml:space="preserve">
    <value>Width</value>
  </data>
  <data name="Options.Bible.SwordFolderButton" xml:space="preserve">
    <value>Browse...</value>
  </data>
  <data name="Options.Bible.SwordFolderGroup" xml:space="preserve">
    <value>Sword Project Folder</value>
  </data>
  <data name="Options.Bible.SwordLanguage" xml:space="preserve">
    <value>Sword Language</value>
  </data>
  <data name="Options.Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Options.Common.Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="Options.Common.Translate" xml:space="preserve">
    <value>If you like to translate this Software into another Language, you are very welcome!</value>
  </data>
  <data name="Options.Graphics.AlphaBlending" xml:space="preserve">
    <value>Alpha Blending:</value>
  </data>
  <data name="Options.Graphics.AlphaCheckBox" xml:space="preserve">
    <value>Alpha Blending</value>
  </data>
  <data name="Options.Graphics.AlphaSpeed" xml:space="preserve">
    <value>Speed</value>
  </data>
  <data name="Options.Graphics.Outline" xml:space="preserve">
    <value>Text Outline Size</value>
  </data>
  <data name="Options.Okay" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Options.Graphics.PreRender" xml:space="preserve">
    <value>Pre-Render</value>
  </data>
  <data name="Options.Graphics.PreRenderDescription" xml:space="preserve">
    <value>All verse-images will be rendered in background and stored in memory. This increases the display Speed enormous. The only drawback is a higher memory usage, with about 2 MB per verse.</value>
  </data>
  <data name="Options.Graphics.PreRenderTitle" xml:space="preserve">
    <value>Pre-Render Verses</value>
  </data>
  <data name="Options.Tabs.BeamBox" xml:space="preserve">
    <value>Projector Window</value>
  </data>
  <data name="Options.Tabs.Bible" xml:space="preserve">
    <value>Bible</value>
  </data>
  <data name="Options.Tabs.Bible.SwordFolderGroup" xml:space="preserve">
    <value>Sword Project Ordner</value>
  </data>
  <data name="Options.Tabs.Browse" xml:space="preserve">
    <value>Browse...</value>
  </data>
  <data name="Options.Tabs.Common" xml:space="preserve">
    <value>Common Settings</value>
  </data>
  <data name="Options.Tabs.Graphics" xml:space="preserve">
    <value>Graphics</value>
  </data>
  <data name="Options.Tabs.SwordLanguageGroup" xml:space="preserve">
    <value>Sword Sprache</value>
  </data>
  <data name="Right.Backgrounds" xml:space="preserve">
    <value>Backgrounds</value>
  </data>
  <data name="Right.Backgrounds.Manage" xml:space="preserve">
    <value>Manage Images</value>
  </data>
  <data name="Right.Backgrounds.Reload" xml:space="preserve">
    <value>Reload Images</value>
  </data>
  <data name="Right.Media" xml:space="preserve">
    <value>Media</value>
  </data>
  <data name="Right.Media.Add" xml:space="preserve">
    <value>Add Media...</value>
  </data>
  <data name="Right.Media.AutoPlay" xml:space="preserve">
    <value>Auto Play</value>
  </data>
  <data name="Right.Media.Down" xml:space="preserve">
    <value>Down</value>
  </data>
  <data name="Right.Media.Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="Right.Media.Show" xml:space="preserve">
    <value>Show&amp;Next</value>
  </data>
  <data name="Right.Media.Up" xml:space="preserve">
    <value>Up</value>
  </data>
  <data name="Right.MediaLists" xml:space="preserve">
    <value>Media Lists</value>
  </data>
  <data name="Right.MediaLists.Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Right.MediaLists.Load" xml:space="preserve">
    <value>&lt;- Load</value>
  </data>
  <data name="Right.MediaLists.Loop" xml:space="preserve">
    <value>Loop Media List</value>
  </data>
  <data name="Right.MediaLists.Seconds" xml:space="preserve">
    <value>seconds.</value>
  </data>
  <data name="Right.MediaLists.TimerCaption" xml:space="preserve">
    <value>Set Auto Play-Timer</value>
  </data>
  <data name="Right.MediaLists.TimerText" xml:space="preserve">
    <value>Change Media Item after:</value>
  </data>
  <data name="Right.Playlist" xml:space="preserve">
    <value>Playlist</value>
  </data>
  <data name="Right.Playlist.Down" xml:space="preserve">
    <value>Down</value>
  </data>
  <data name="Right.Playlist.Load" xml:space="preserve">
    <value>&lt;- Load</value>
  </data>
  <data name="Right.Playlist.Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="Right.Playlist.Up" xml:space="preserve">
    <value>Up</value>
  </data>
  <data name="Right.Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Right.Search.Load" xml:space="preserve">
    <value>&lt;- Load</value>
  </data>
  <data name="Right.Search.Phrase" xml:space="preserve">
    <value>Phrase</value>
  </data>
  <data name="Right.Search.sAllSongs" xml:space="preserve">
    <value>All Songs</value>
  </data>
  <data name="Right.Search.Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Right.Search.Words" xml:space="preserve">
    <value>Words</value>
  </data>
  <data name="Right.Songs" xml:space="preserve">
    <value>Songs</value>
  </data>
  <data name="Right.Songs.Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Right.Songs.Load" xml:space="preserve">
    <value>&lt;- Load</value>
  </data>
  <data name="Right.Songs.Playlist" xml:space="preserve">
    <value>Add to Playlist</value>
  </data>
  <data name="ShowSongs.BackgroundPanel" xml:space="preserve">
    <value>Background</value>
  </data>
  <data name="ShowSongs.HideAuthor_Button" xml:space="preserve">
    <value>Hide Author</value>
  </data>
  <data name="ShowSongs.HideElementsPanel" xml:space="preserve">
    <value>Hide Elements</value>
  </data>
  <data name="ShowSongs.HideText_Button" xml:space="preserve">
    <value>Hide Verses</value>
  </data>
  <data name="ShowSongs.HideTitle_Button" xml:space="preserve">
    <value>Hide Title</value>
  </data>
  <data name="ShowSongs.OverwriteBG_Button" xml:space="preserve">
    <value>Overwrite</value>
  </data>
  <data name="ShowSongs.ToProjector" xml:space="preserve">
    <value>Live</value>
  </data>
  <data name="SongEdit.BG_DecscriptionLabel" xml:space="preserve">
    <value>Background Image</value>
  </data>
  <data name="SongEdit.ML_Button" xml:space="preserve">
    <value>Enable</value>
  </data>
  <data name="SongEdit.MultiLangPanel" xml:space="preserve">
    <value>Multi-Language</value>
  </data>
  <data name="SongEdit.TextAlignPanel" xml:space="preserve">
    <value>Text Align</value>
  </data>
  <data name="Status.ImagesLoaded" xml:space="preserve">
    <value>Background Images Loaded.</value>
  </data>
  <data name="Status.LoadingImages" xml:space="preserve">
    <value>Laoding Background Images ... "%1%"%</value>
  </data>
  <data name="Status.LoadingMediaFiles" xml:space="preserve">
    <value>Loading Media-Files ... "%1%"%</value>
  </data>
  <data name="Status.MediaFilesLoaded" xml:space="preserve">
    <value>Media-Files loaded.</value>
  </data>
  <data name="Status.MediaListRenamed" xml:space="preserve">
    <value>MediaList has been renamed to "%1%".</value>
  </data>
  <data name="Status.MediaListSavedAs" xml:space="preserve">
    <value>MediaList saved as "%1%".</value>
  </data>
  <data name="Status.PlaylistSongRemoved" xml:space="preserve">
    <value>Song "%1%" removed from playlist.</value>
  </data>
  <data name="Status.SongDeleted" xml:space="preserve">
    <value>Song "%1%" deleted.</value>
  </data>
  <data name="Status.SongLoaded" xml:space="preserve">
    <value>Song "%1%" loaded.</value>
  </data>
  <data name="Status.SongRenamed" xml:space="preserve">
    <value>Song has been renamed to "%1%".</value>
  </data>
  <data name="Status.SongSavedAs" xml:space="preserve">
    <value>Song saved as "%1%".</value>
  </data>
  <data name="Status.SongToPlayList" xml:space="preserve">
    <value>Song "%1%" added to playlist.</value>
  </data>
  <data name="TabPages.Bible" xml:space="preserve">
    <value>Bible</value>
  </data>
  <data name="TabPages.EditSongs" xml:space="preserve">
    <value>Edit Songs</value>
  </data>
  <data name="TabPages.Presentation" xml:space="preserve">
    <value>Media Presentation</value>
  </data>
  <data name="TabPages.ShowSongs" xml:space="preserve">
    <value>Show Songs</value>
  </data>
  <data name="TabPages.TextTool" xml:space="preserve">
    <value>Text Tool</value>
  </data>
  <data name="TextTool.Bible.Books" xml:space="preserve">
    <value>Books</value>
  </data>
  <data name="TextTool.Bible.FindVerse" xml:space="preserve">
    <value>Find Verse</value>
  </data>
  <data name="TextTool.Bible.GetSword" xml:space="preserve">
    <value>Get the Sword Bible</value>
  </data>
  <data name="TextTool.Bible.NewTestament" xml:space="preserve">
    <value>New Testament</value>
  </data>
  <data name="TextTool.Bible.OldTestament" xml:space="preserve">
    <value>Old Testament</value>
  </data>
  <data name="TextTool.Bible.Translation" xml:space="preserve">
    <value>Translation</value>
  </data>
  <data name="TextTool.NewDocument" xml:space="preserve">
    <value>New Document</value>
  </data>
  <data name="Toolbar.HideBackground" xml:space="preserve">
    <value>Hide Background</value>
  </data>
  <data name="Toolbar.HideText" xml:space="preserve">
    <value>Hide Text</value>
  </data>
  <data name="Toolbar.SaveMediaList" xml:space="preserve">
    <value>Save MediaList</value>
  </data>
  <data name="Toolbar.SaveSong" xml:space="preserve">
    <value>Save Song</value>
  </data>
  <data name="Toolbar.ShowBeamBox" xml:space="preserve">
    <value>Show Projector Window</value>
  </data>
  <data name="Toolbar.SizePosition" xml:space="preserve">
    <value>Size/Position</value>
  </data>
  <data name="EditSongs.LyricTypeVerse" xml:space="preserve">
    <value>Verse</value>
  </data>
  <data name="EditSongs.LyricTypeChorus" xml:space="preserve">
    <value>Chorus</value>
  </data>
  <data name="EditSongs.LyricTypeOther" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="Right.Media.Add.Close" xml:space="preserve">
    <value>Close media browser</value>
  </data>
</root>